services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: geniuserp-app
    volumes:
      - .:/app
      - /app/node_modules # Volume pentru node_modules să nu fie suprascris de volumul din container
    ports:
      - "5000:5000" # API
      - "3000:3000" # Frontend Vite
    environment:
      # Variabile de bază
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/geniuserp
      
      # Redis Cloud (citite din .env)
      - REDIS_URL=${REDIS_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_USERNAME=${REDIS_USERNAME:-default}
      
      - RUN_MIGRATIONS=${RUN_MIGRATIONS:-false}
      
      # Secrets pentru securitate (citite din .env)
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
      
      # ANAF API
      - ANAF_API_URL=${ANAF_API_URL}
      - ANAF_API_VERSION=${ANAF_API_VERSION:-v7}
      
      # Date pentru email
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - EMAIL_FROM=${EMAIL_FROM}
      
      # Setări pentru logging
      - LOG_LEVEL=${LOG_LEVEL:-debug}
      - ENABLE_SQL_LOGGING=${ENABLE_SQL_LOGGING:-true}
      
      # OpenAI
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_ORGANIZATION=${OPENAI_ORGANIZATION}
      - OPENAI_DEFAULT_MODEL=${OPENAI_DEFAULT_MODEL:-gpt-4}
      
      # Setări pentru debugare și HMR
      - VITE_DEV_SERVER_URL=http://localhost:5000
      
      # Setări Vite HMR pentru Hot Reload în Docker
      - VITE_HMR_PROTOCOL=ws
      - VITE_HMR_HOST=localhost
      - VITE_HMR_PORT=5000
      - VITE_HMR_CLIENT_PORT=5000
      
      # Enable watch polling pentru Docker volumes (important pentru HMR)
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=100
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - geniuserp-network

  postgres:
    image: postgres:17-alpine
    container_name: geniuserp-postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=geniuserp
    restart: unless-stopped
    networks:
      - geniuserp-network
    command: postgres -c 'max_connections=200' -c 'shared_buffers=512MB'

  # Adminer pentru administrarea bazei de date (opțional)
  adminer:
    image: adminer
    container_name: geniuserp-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - geniuserp-network

networks:
  geniuserp-network:
    driver: bridge

volumes:
  postgres_data: