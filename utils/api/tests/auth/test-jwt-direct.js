/**
 * Direct JWT Service Test
 * 
 * This test directly uses the JwtService to verify a token
 */

import { JwtService } from './server/modules/auth/services/jwt.service.js';

// The token generated by test-jwt-refresh.js with the current environment's secret
const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImUzZDhlNDgxLWJmYjQtNGYzYi1iYzk5LTcxNDNmYTY3MzE3MiIsInVzZXJuYW1lIjoiYWRtaW4iLCJyb2xlIjoiYWRtaW4iLCJyb2xlcyI6WyJhZG1pbiJdLCJjb21wYW55SWQiOiI3MTk2Mjg4ZC03MzE0LTQ1MTItOGI2Ny0yYzgyNDQ5YjU0NjUiLCJpYXQiOjE3NDM1NzI1ODAsImV4cCI6MTc0MzU3NjE4MH0.f8pKyySZLNTjYUyeeSQzqhgc717NDzvNZ8j5ZERU510';

// Create a JwtService instance
const jwtService = new JwtService();

// Test the token verification
try {
  console.log('Testing JwtService.verifyToken...');
  console.log('Token:', token);
  
  const decoded = jwtService.verifyToken(token);
  console.log('✅ Token is valid!');
  console.log('Decoded payload:', decoded);
} catch (error) {
  console.error('❌ Token verification failed:', error.message);
  console.error(error.stack);
}

// Also test directly decoding the token without verification
console.log('\nTesting JwtService.decodeToken (without verification)...');
const decodedWithoutVerification = jwtService.decodeToken(token);
console.log('Decoded (without verification):', decodedWithoutVerification);