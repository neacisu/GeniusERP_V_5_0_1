{
  "moduleName": "admin",
  "displayName": "Admin Module",
  "description": "Suite de testare completă pentru modulul de administrare - gestionare utilizatori, roluri, API keys, configurări, licențe",
  "version": "1.0.0",
  "enabled": true,
  "priority": 1,
  "testTypes": {
    "unit": {
      "enabled": true,
      "timeout": 5000,
      "retry": 1,
      "coverage": {
        "target": 90,
        "statements": 90,
        "branches": 85,
        "functions": 90,
        "lines": 90
      }
    },
    "integration": {
      "enabled": true,
      "timeout": 10000,
      "retry": 2,
      "requiresDb": true,
      "setupTimeout": 30000
    },
    "e2e": {
      "enabled": true,
      "timeout": 30000,
      "retry": 2,
      "requiresServer": true,
      "headless": true,
      "slowMo": 0
    },
    "performance": {
      "enabled": true,
      "tools": ["k6", "artillery", "jmeter"],
      "thresholds": {
        "responseTime": {
          "p50": 100,
          "p95": 500,
          "p99": 1000
        },
        "errorRate": 1,
        "throughput": 1000
      }
    },
    "security": {
      "enabled": true,
      "timeout": 15000,
      "criticalOnly": false
    }
  },
  "components": {
    "services": [
      {
        "name": "ApiKeyService",
        "file": "api-key.service.ts",
        "testFile": "unit/services/api-key.service.test.ts",
        "priority": "high",
        "coverage": 95
      },
      {
        "name": "ConfigService",
        "file": "config.service.ts",
        "testFile": "unit/services/config.service.test.ts",
        "priority": "high",
        "coverage": 92
      },
      {
        "name": "HealthCheckService",
        "file": "health-check.service.ts",
        "testFile": "unit/services/health-check.service.test.ts",
        "priority": "high",
        "coverage": 0
      },
      {
        "name": "LicenseService",
        "file": "license.service.ts",
        "testFile": "unit/services/license.service.test.ts",
        "priority": "medium",
        "coverage": 0
      },
      {
        "name": "RoleService",
        "file": "role.service.ts",
        "testFile": "unit/services/role.service.test.ts",
        "priority": "high",
        "coverage": 90
      },
      {
        "name": "SetupService",
        "file": "setup.service.ts",
        "testFile": "unit/services/setup.service.test.ts",
        "priority": "medium",
        "coverage": 0
      },
      {
        "name": "UserService",
        "file": "user.service.ts",
        "testFile": "unit/services/user.service.test.ts",
        "priority": "high",
        "coverage": 93
      }
    ],
    "controllers": [
      {
        "name": "AdminController",
        "file": "admin.controller.ts",
        "testFile": "unit/controllers/admin.controller.test.ts",
        "priority": "high",
        "coverage": 0
      },
      {
        "name": "ApiKeyController",
        "file": "api-key.controller.ts",
        "testFile": "unit/controllers/api-key.controller.test.ts",
        "priority": "high",
        "coverage": 0
      },
      {
        "name": "ConfigController",
        "file": "config.controller.ts",
        "testFile": "unit/controllers/config.controller.test.ts",
        "priority": "medium",
        "coverage": 0
      },
      {
        "name": "HealthCheckController",
        "file": "health-check.controller.ts",
        "testFile": "unit/controllers/health-check.controller.test.ts",
        "priority": "high",
        "coverage": 0
      },
      {
        "name": "LicenseController",
        "file": "license.controller.ts",
        "testFile": "unit/controllers/license.controller.test.ts",
        "priority": "medium",
        "coverage": 0
      },
      {
        "name": "RoleController",
        "file": "role.controller.ts",
        "testFile": "unit/controllers/role.controller.test.ts",
        "priority": "high",
        "coverage": 0
      },
      {
        "name": "SetupController",
        "file": "setup.controller.ts",
        "testFile": "unit/controllers/setup.controller.test.ts",
        "priority": "high",
        "coverage": 0
      },
      {
        "name": "UserController",
        "file": "user.controller.ts",
        "testFile": "unit/controllers/user.controller.test.ts",
        "priority": "high",
        "coverage": 0
      }
    ]
  },
  "integrationTests": [
    {
      "name": "API Keys Flow",
      "file": "integration/api-keys-flow.test.ts",
      "description": "Testează ciclul complet al cheilor API: creare, validare, rotație, revocare"
    },
    {
      "name": "User-Role Assignment",
      "file": "integration/user-role-assignment.test.ts",
      "description": "Testează asignarea rolurilor și permisiunilor la utilizatori"
    },
    {
      "name": "Config Cascade",
      "file": "integration/config-cascade.test.ts",
      "description": "Testează ierarhia configurărilor: user > company > module > global"
    },
    {
      "name": "License Activation",
      "file": "integration/license-activation.test.ts",
      "description": "Testează activarea și verificarea licențelor"
    }
  ],
  "e2eTests": [
    {
      "name": "Admin Setup Flow",
      "file": "e2e/admin-setup-flow.test.ts",
      "description": "Setup complet sistem: requirements, migrations, first admin"
    },
    {
      "name": "User Lifecycle",
      "file": "e2e/user-lifecycle.test.ts",
      "description": "Ciclul complet utilizator: create, login, update, delete"
    },
    {
      "name": "Role Permissions Flow",
      "file": "e2e/role-permissions-flow.test.ts",
      "description": "Gestionare completă roluri și permisiuni"
    }
  ],
  "performanceTests": {
    "k6": [
      {
        "name": "User Endpoints",
        "file": "performance/k6/user-endpoints.js",
        "vus": 100,
        "duration": "5m"
      },
      {
        "name": "API Key Validation",
        "file": "performance/k6/api-key-validation.js",
        "vus": 500,
        "duration": "10m"
      }
    ],
    "artillery": [
      {
        "name": "Admin Load Test",
        "file": "performance/artillery/admin-load-test.yml",
        "target": 1000,
        "duration": 300
      }
    ],
    "jmeter": [
      {
        "name": "Admin Stress Test",
        "file": "performance/jmeter/admin-stress-test.jmx",
        "threads": 1000,
        "rampUp": 60,
        "duration": 600
      }
    ]
  },
  "securityTests": [
    {
      "name": "Auth Bypass Prevention",
      "file": "security/auth-bypass.test.ts",
      "severity": "critical"
    },
    {
      "name": "SQL Injection Prevention",
      "file": "security/injection-prevention.test.ts",
      "severity": "critical"
    },
    {
      "name": "Rate Limiting",
      "file": "security/rate-limiting.test.ts",
      "severity": "high"
    },
    {
      "name": "Password Security",
      "file": "security/password-security.test.ts",
      "severity": "critical"
    }
  ],
  "dependencies": {
    "modules": [],
    "external": [
      "bcrypt",
      "jsonwebtoken",
      "uuid",
      "zod"
    ]
  },
  "environment": {
    "variables": {
      "TEST_DATABASE_URL": "required",
      "TEST_JWT_SECRET": "required",
      "TEST_API_URL": "http://localhost:5000",
      "TEST_ADMIN_EMAIL": "admin@test.local",
      "TEST_ADMIN_PASSWORD": "TestAdmin123!"
    }
  },
  "monitoring": {
    "grafana": {
      "dashboard": "admin-module-tests",
      "url": "http://localhost:3000/d/admin-tests"
    },
    "loki": {
      "enabled": true,
      "labels": {
        "module": "admin",
        "environment": "test"
      }
    },
    "sentry": {
      "enabled": true,
      "dsn": "${SENTRY_DSN}",
      "environment": "test"
    },
    "prometheus": {
      "enabled": true,
      "port": 9090,
      "metrics": [
        "test_duration_seconds",
        "test_success_total",
        "test_failure_total",
        "test_coverage_percent"
      ]
    }
  },
  "reporting": {
    "formats": ["html", "json", "junit", "markdown"],
    "outputDir": "utils/testing/modules/admin/reports",
    "screenshots": {
      "onFailure": true,
      "onSuccess": false
    },
    "video": {
      "enabled": false,
      "onFailure": true
    }
  },
  "hooks": {
    "beforeAll": ["./hooks/setup-test-db.ts"],
    "afterAll": ["./hooks/cleanup-test-db.ts"],
    "beforeEach": ["./hooks/reset-mocks.ts"],
    "afterEach": ["./hooks/clear-cache.ts"]
  },
  "metadata": {
    "author": "Testing Team",
    "created": "2025-01-13",
    "lastUpdated": "2025-01-13",
    "tags": ["admin", "users", "roles", "api-keys", "config"],
    "documentation": "README.md"
  }
}

