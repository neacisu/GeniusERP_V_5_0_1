Hereâ€™s a **reformulated and Express + Drizzle-adapted** version of **Step 90**, ensuring the agent first checks for existing code to avoid duplication:

---

```markdown
### ðŸ”„ Step 90: Audit & Define Sales Controller (Express + Drizzle)

**ðŸ“Œ Description:**  
Implement or upgrade a `SalesController` in the CRM (Sales) module to serve as the foundational routing point for CRM logic. Begin with a placeholder route (`/placeholder`) to confirm routing is functional. Use Express middleware (`AuthGuard`) for securing the route. Before implementation, audit the codebase for existing routes or controllers under `sales` to avoid duplication.

---

### ðŸ§  Agent Instructions:

1. **Audit Before Implementation:**
   - Check for existing sales-related controllers, routers, or Express handlers under:
     - `src/modules/sales/`
     - `src/routes/sales.ts` or any CRM-specific file
   - If a controller or route handler exists, upgrade it by adding a `/placeholder` route rather than creating new duplicates.

2. **Implement or Upgrade Controller:**
   - If not present, create `src/modules/sales/sales.controller.ts`
   - Implement an Express router with a simple secured POST endpoint `/placeholder`
   - Use the existing `requireAuth` middleware to protect the route

---

### âœ… Example Controller Boilerplate:

```ts
import { Router } from "express";
import { requireAuth } from "../../common/middleware/auth.middleware";

const router = Router();

router.post("/placeholder", requireAuth, async (req, res) => {
  res.json({ message: "CRM placeholder" });
});

export default router;
```

---

### ðŸ“Œ Next Steps:

- Place the controller in `src/modules/sales/`
- Ensure it is exported from `src/modules/sales/index.ts` if using modular route loading
- Register the route in `server/app.ts`:
  ```ts
  import salesRoutes from "./modules/sales/sales.controller";
  app.use("/v1/sales", salesRoutes);
  ```
- Run `npm run build` and test with:
  ```bash
  curl -X POST http://localhost:3000/v1/sales/placeholder \
    -H "Authorization: Bearer <your_token>" \
    -H "Content-Type: application/json" \
    -d '{}'
  ```

---

### âœ… Outcome:
> A secure, minimal, and extensible CRM entry point under `/v1/sales` with Express and Drizzle, fully integrated with existing auth middleware and module structure, ready for feature expansion.

Let me know if you'd like to scaffold the full CRM flow (deals, pipelines, notes, reminders, follow-ups, etc.).
```