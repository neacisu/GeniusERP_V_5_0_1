Here is the **reformulated version of Step 91**, adapted for **Express with Drizzle**, and requesting the agent to **audit the existing implementation first** to avoid duplication:

---

```markdown
### ðŸ”„ Step 91: Audit & Define HR Controller (Express + Drizzle)

**ðŸ“Œ Description:**  
Establish or enhance the `HrController` for the Human Resources module within GeniusERP v.2. This controller should provide a basic secured `/placeholder` endpoint to validate routing and auth integration. Before proceeding, the agent should audit the current implementation to determine whether such a controller already exists, and upgrade it if necessary.

---

### ðŸ§  Agent Instructions:

1. **Audit First:**
   - Search for any existing HR-related route handlers or Express controllers in:
     - `src/modules/hr/`
     - `src/routes/hr.ts`
     - Any references to `/hr` in route declarations (e.g., `app.use("/v1/hr", ...)`)
   - If an existing controller or route is found, **enhance it** with the placeholder endpoint.
   - Avoid creating redundant files or duplicated logic.

2. **If Missing, Implement New:**
   - Create file: `src/modules/hr/hr.controller.ts`
   - Define a basic POST `/placeholder` route secured with Express auth middleware
   - Register the route under `/v1/hr` in the Express app router

---

### âœ… Example (Express Controller):

```ts
import { Router } from "express";
import { requireAuth } from "../../common/middleware/auth.middleware";

const router = Router();

router.post("/placeholder", requireAuth, async (req, res) => {
  res.json({ message: "HR placeholder" });
});

export default router;
```

---

### ðŸ”— Integration:

- **Register Route in Express App:**
  ```ts
  import hrRoutes from "./modules/hr/hr.controller";
  app.use("/v1/hr", hrRoutes);
  ```

- **Ensure proper export in `hr.module.ts` or `index.ts`**:
  ```ts
  export { default as hrRoutes } from "./hr.controller";
  ```

---

### ðŸ§ª Test Command:

```bash
curl -X POST http://localhost:3000/v1/hr/placeholder \
  -H "Authorization: Bearer <your_token>" \
  -H "Content-Type: application/json" \
  -d '{}'
```

---

### âœ… Expected Outcome:
> A secured and modular Express controller (`HrController`) integrated into the HR module with a basic operational route, ready to be expanded with employee management, attendance, contracts, onboarding, and other HR features in future steps.
```

Let me know if you also want to scaffold a full HR feature set next (employees, payroll, leaves, contracts, etc.).