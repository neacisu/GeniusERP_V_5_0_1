```markdown
### Step 76: Create UserService (Drizzle + Admin Integration)

**üß† Description:**  
Implement `UserService` using **Drizzle ORM exclusively** to handle core user management operations inside the AdminModule. This service will support:

- Creating new users with secure password hashing
- Updating user details (email, name, password)
- Soft deletion or status-based disabling
- Assigning roles and permissions
- Integrating with audit and logging systems

This will serve as the foundation for user onboarding, management, and role-based access enforcement within the AdminModule.

---

**üìé Dependencies:**  
Step 75 (AdminModule created), bcrypt installed, Drizzle ORM configured

---

**‚öôÔ∏è Prompt for Agent:**

"Create `UserService` for GeniusERP v.2 using **Drizzle ORM only** (no Prisma). Implement secure user creation and management inside `AdminModule`.

1. Create the service:
`server/modules/admin/services/user.service.ts`
```ts
import { Injectable } from '@nestjs/common';
import { db } from '@/server/db';
import { users } from '@/server/schema/auth.schema';
import { eq } from 'drizzle-orm';
import * as bcrypt from 'bcrypt';

@Injectable()
export class UserService {
  async createUser(companyId: string, email: string, password: string) {
    const hashedPassword = await bcrypt.hash(password, 10);

    return await db.insert(users).values({
      company_id: companyId,
      email,
      password: hashedPassword,
      created_at: new Date(),
      updated_at: new Date()
    }).returning();
  }

  async updateUser(userId: string, updates: Partial<{ email: string; password: string }>) {
    const updateData: any = { updated_at: new Date() };
    if (updates.email) updateData.email = updates.email;
    if (updates.password) updateData.password = await bcrypt.hash(updates.password, 10);

    return await db.update(users).set(updateData).where(eq(users.id, userId)).returning();
  }

  async deleteUser(userId: string) {
    return await db.delete(users).where(eq(users.id, userId)).returning();
  }
}
```

2. Update the module to register the service:
`server/modules/admin/admin.module.ts`
```ts
import { UserService } from './services/user.service';

@Module({
  imports: [DrizzleModule],
  providers: [UserService],
  exports: [UserService]
})
export class AdminModule {}
```

3. Install dependencies if needed:
```bash
npm install bcrypt @types/bcrypt
```

4. Verify:
```bash
npm run build
```

üß© This service should later integrate with:
- `RolesService` for assigning user roles
- `AuditService` for action tracking
- `AuthService` for secure login and JWT issuance
```