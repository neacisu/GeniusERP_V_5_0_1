```
Step 51: Define Integrations Model (External Systems & APIs)

🎯 Description:  
Define a unified `Integration` model in the schema to manage all third-party platform connections from GeniusERP v.2. This includes marketing, eCommerce, accounting, shipping, messaging, payments, validation APIs, and AI tools (Section 2.2.2.7). This model enables tracking provider-specific configuration, sync status, and connection metadata.

📦 Technologies:
- ORM: Drizzle (PostgreSQL)
- Monorepo: NX
- Language: TypeScript
- Location: `server/modules/integrations/schema/integrations.schema.ts`

🧱 Dependencies:
- Step 8: Base schema structure created

🔍 Online Research Summary – External Systems to Support:

| Category               | Providers / APIs                                                                 |
|------------------------|----------------------------------------------------------------------------------|
| ✅ e-Factura            | ANAF e-Factura (via SPV XML + API Gateway)                                      |
| 🛒 eCommerce           | Shopify (Storefront API, Admin API), Shopify Inbox                              |
| 💬 Messaging           | Facebook Messenger, Facebook Comments, WAMM.ro (WhatsApp), SMS APIs             |
| 💳 Payments            | Stripe, Revolut Business                                                         |
| 📦 Shipping            | Sameday (eAWB API), FanCourier, Urgent Cargus                                    |
| ✉️ Email/SMTP/POP3     | IMAP, SMTP, POP3 integration for inbox sync                                     |
| 🧾 Company Registry    | termene.ro API, MFinante (ANAF CUI / fiscal info lookup)                        |
| 📊 Ads & Analytics     | Facebook Ads, Google Ads, TikTok Ads, Facebook Analytics, Google Analytics      |
| 🔍 Validation & Email  | NeverBounce (email verification)                                                 |
| 🧠 AI Integrations     | ChatGPT (OpenAI), Grok, ElevenLabs (TTS/Voice Gen)                              |

⚙️ Prompt for Agent:

"Define the Integrations model for GeniusERP v.2 in Replit using Drizzle ORM:

1. Open schema file:
```ts
server/modules/integrations/schema/integrations.schema.ts
```

2. Add the following schema:
```ts
import { pgTable, uuid, varchar, jsonb, timestamp, index } from 'drizzle-orm/pg-core';

export const integrations = pgTable('integrations', {
  id: uuid('id').primaryKey().defaultRandom(),
  company_id: varchar('company_id', { length: 36 }).notNull(),
  franchise_id: varchar('franchise_id', { length: 36 }),
  provider: varchar('provider', { length: 100 }).notNull(), // e.g. 'stripe', 'anaf_efactura'
  status: varchar('status', { length: 20 }).default('disconnected'), // 'connected', 'error'
  config: jsonb('config').notNull(), // access_token, url, credentials, scopes
  created_at: timestamp('created_at').defaultNow(),
  updated_at: timestamp('updated_at').defaultNow(),
}, (table) => ({
  companyIndex: index('integrations_company_idx').on(table.company_id, table.franchise_id, table.created_at),
}));
```

3. Save and generate migration:
```bash
npx drizzle-kit generate:pg --out drizzle/migrations --name integrations-model
```

4. Push migration to database:
```bash
npx drizzle-kit push:pg
```

🧪 Expected:
- `integrations` table ready to handle dynamic provider configs
- Will be used in: invoicing (eFactura), CRM (Meta, Google), sync services, etc.
- Easily extendable to support token rotation, sync timestamps, logs, scopes
```